
# Detect the red box, yellow bottle, and white cup
detect_object("red box")
detect_object("yellow bottle")
detect_object("white cup")


//////


import numpy as np

def create_trajectory(start, end, steps=100):
    """Create a linear trajectory from start to end with a given number of steps."""
    return [np.linspace(start[i], end[i], steps).tolist() for i in range(4)]

# Step 1: Approach the Red Box
approach_position = [0.2, -0.5, 0.2]  # Above the red box
approach_orientation = 0  # Align with the narrow side
trajectory_1 = create_trajectory([0.0, -0.59, 0.455, 0], approach_position + [approach_orientation])

# Step 2: Pick Up the Red Box
pick_position = [0.2, -0.5, 0.1]  # At the red box
trajectory_2 = create_trajectory(approach_position + [approach_orientation], pick_position + [approach_orientation])

# Execute Step 1 and Step 2
execute_trajectory(trajectory_1)
close_gripper()
execute_trajectory(trajectory_2)

# Step 3: Move to Target Position
lift_position = [0.2, -0.5, 0.3]  # Lift the box
target_position = [0.5, -0.5, 0.3]  # Between the yellow bottle and white cup
trajectory_3 = create_trajectory(pick_position + [approach_orientation], lift_position + [approach_orientation])
trajectory_4 = create_trajectory(lift_position + [approach_orientation], target_position + [approach_orientation])

# Execute Step 3
execute_trajectory(trajectory_3)
execute_trajectory(trajectory_4)

# Step 4: Place the Red Box
place_position = [0.5, -0.5, 0.1]  # On the tabletop
trajectory_5 = create_trajectory(target_position + [approach_orientation], place_position + [approach_orientation])

# Execute Step 4
execute_trajectory(trajectory_5)
open_gripper()

# Task Completed
task_completed()


//////

